{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "rules",
	"patterns": [
		{
			"include": "#sections"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#methods"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"sections": {
			"patterns": [
			{
				"name": "entity.name.type.section.splillet.rules",
				"match": "-{3,} ([a-zA-Z]|\\.)+"
			}
			]
		},
		"keywords": {
			"patterns": [
			{
				"name": "keyword.control.http.rules",
				"match": "GET|POST|PUT|DELETE|HEAD|TRACE|OPTIONS|CONNECT"
			},
			{
				"name": "keyword.control.other.rules",
				"match": "format:|upper|lower"
			},
			{
				"name": "keyword.block.rules",
				"match": "~ [a-zA-Z]+"
			},
			{
				"name": "keyword.dynamic-part.rules",
				"match": "{{|}}"
			},
			{
				"name": "keyword.pass-to-pipeline.rules",
				"match": ">>"
			}
			]
		},
		"variables": {
			"patterns": [{
				"name": "entity.name.variable.rules",
				"match": "\\$\\$([a-zA-Z]|\\.)+"
			},
			{
				"name": "entity.name.variable.rules",
				"match": "elapsed|attempt|value"
			}
			]
		},
		"methods": {
			"patterns": [{
				"name": "entity.name.function.rules",
				"match": "(regex|jpath|xpath|form|all|int|any|guid|range|echo|seq|req.path|req.query|req.header|req.body.all|req.body.form|req.body.jpath|req.body.xpath|str|read.file|date.utc.past|date.utc.future|date.utc|date.future|date.past|date|now.utc|now|float|name|name.first|name.last|random)( |:)"
			},
			{
				"name": "entity.name.function.rules",
				"match": "\\$[^\\.]([a-zA-Z_]|\\.)+"
			},
			{
				"name": "entity.name.function.rules",
				"match": "cache\\.set|cache\\.contains|cache\\.remove|cache\\.get"
			},
			{
				"name": "entity.name.function.rules",
				"match": "req.path|req.query|req.header|req.body.all|req.body.form|req.body.jpath|req.body.xpath"
			}
			]
		},
		"comments": {
            "patterns": [
                {
                    "name": "comment.block.rules",
                    "begin": "###",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.rules"
                        }
                    },
                    "end": "###",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.rules"
                        }
                    }
                },
                {
					"name": "comment.block.rules",
                    "begin": "##",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.rules"
                        }
                    },
                    "end": "(?=$)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.rules"
                        }
                    }
                }
            ]
        }
	},
	"scopeName": "rules"
}